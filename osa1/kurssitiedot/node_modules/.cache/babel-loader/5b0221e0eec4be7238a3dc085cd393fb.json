{"ast":null,"code":"var _jsxFileName = \"/home/alqio/fullstackopen/osa1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack -sovelluskehitys',\n    parts: [{\n      name: 'Reactin perusteet',\n      exercises: 10\n    }, {\n      name: 'Tiedonvälitys propseilla',\n      exercises: 7\n    }, {\n      name: 'Komponenttien tila',\n      exercises: 14\n    }]\n  }; //const summa = parts.map(part => part.exercises).reduce((a, b) => a + b);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Header, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Content, {\n    parts: parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Total, {\n    parts: parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nconst Header = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.course));\n};\n\nconst Part = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.part.name, \" \", props.part.exercises));\n};\n\nconst Content = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Part, {\n    part: props.parts[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Part, {\n    part: props.parts[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Part, {\n    part: props.parts[2],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nconst Total = props => {\n  const summa = props.parts.map(part => part.exercises).reduce((a, b) => a + b);\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"yhteens\\xE4 \", summa, \" teht\\xE4v\\xE4\\xE4\"));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/alqio/fullstackopen/osa1/src/index.js"],"names":["React","ReactDOM","App","course","name","parts","exercises","Header","props","Part","part","Content","Total","summa","map","reduce","a","b","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAMC,MAAM,GAAG;AACXC,IAAAA,IAAI,EAAE,6BADK;AAEXC,IAAAA,KAAK,EAAE,CACH;AACID,MAAAA,IAAI,EAAE,mBADV;AAEIE,MAAAA,SAAS,EAAE;AAFf,KADG,EAKH;AACIF,MAAAA,IAAI,EAAE,0BADV;AAEIE,MAAAA,SAAS,EAAE;AAFf,KALG,EASH;AACIF,MAAAA,IAAI,EAAE,oBADV;AAEIE,MAAAA,SAAS,EAAE;AAFf,KATG;AAFI,GAAf,CADc,CAmBd;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAQH,CA7BD;;AA+BA,MAAME,MAAM,GAAIC,KAAD,IAAW;AACtB,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACL,MAAX,CADJ,CADJ;AAKH,CAND;;AAQA,MAAMM,IAAI,GAAID,KAAD,IAAW;AACpB,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACE,IAAN,CAAWN,IAAf,OAAsBI,KAAK,CAACE,IAAN,CAAWJ,SAAjC,CADJ,CADJ;AAKH,CAND;;AAQA,MAAMK,OAAO,GAAIH,KAAD,IAAW;AACvB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,KAAK,CAACH,KAAN,CAAY,CAAZ,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEG,KAAK,CAACH,KAAN,CAAY,CAAZ,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEG,KAAK,CAACH,KAAN,CAAY,CAAZ,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CARD;;AAUA,MAAMO,KAAK,GAAIJ,KAAD,IAAW;AACrB,QAAMK,KAAK,GAAGL,KAAK,CAACH,KAAN,CAAYS,GAAZ,CAAgBJ,IAAI,IAAIA,IAAI,CAACJ,SAA7B,EAAwCS,MAAxC,CAA+C,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7D,CAAd;AACA,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaJ,KAAb,uBADJ,CADJ;AAKH,CAPD;;AASAZ,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAxB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n    const course = {\n        name: 'Half Stack -sovelluskehitys',\n        parts: [\n            {\n                name: 'Reactin perusteet',\n                exercises: 10\n            },\n            {\n                name: 'Tiedonvälitys propseilla',\n                exercises: 7\n            },\n            {\n                name: 'Komponenttien tila',\n                exercises: 14\n            }\n        ]\n    };\n\n    //const summa = parts.map(part => part.exercises).reduce((a, b) => a + b);\n\n    return (\n        <div>\n            <Header course={course}/>\n            <Content parts={parts}/>\n            <Total parts={parts}/>\n        </div>\n    )\n\n};\n\nconst Header = (props) => {\n    return (\n        <>\n            <h1>{props.course}</h1>\n        </>\n    )\n};\n\nconst Part = (props) => {\n    return (\n        <>\n            <p>{props.part.name} {props.part.exercises}</p>\n        </>\n    )\n};\n\nconst Content = (props) => {\n    return (\n        <div>\n            <Part part={props.parts[0]}/>\n            <Part part={props.parts[1]}/>\n            <Part part={props.parts[2]}/>\n        </div>\n    )\n};\n\nconst Total = (props) => {\n    const summa = props.parts.map(part => part.exercises).reduce((a, b) => a + b);\n    return (\n        <>\n            <p>yhteensä {summa} tehtävää</p>\n        </>\n    )\n};\n\nReactDOM.render(<App/>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}