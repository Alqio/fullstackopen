{"version":3,"sources":["numbersService.js","App.jsx","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","className","PersonForm","addPerson","handlePersonChange","handleNumberChange","onSubmit","onChange","type","Person","name","number","deleteNumber","onClick","Filter","handleFilterChange","App","useState","persons","setPersons","useEffect","numbersService","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","setColor","createMessage","c","m","setTimeout","event","preventDefault","find","person","window","confirm","oldPerson","updatedPerson","map","per","catch","error","console","log","concat","target","value","filter","toLowerCase","includes","key","p","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d54de1b3.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons';\n//https://serene-coast-84877.herokuapp.com\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data)\n};\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data)\n};\n\nconst deleteNumber = id => {\n    const request = axios.delete(baseUrl + '/' + id);\n    return request.then(response => response.data)\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data)\n};\n\nexport default {\n    getAll,\n    create,\n    update,\n    deleteNumber\n}","import React, {useState, useEffect} from 'react'\nimport numbersService from './numbersService'\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n\n    useEffect(() => {\n        numbersService.getAll()\n            .then(data => {\n                setPersons(data)\n            })\n    }, []);\n\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [newFilter, setNewFilter] = useState('');\n    const [message, setMessage] = useState(null);\n    const [color, setColor] = useState(\"green\");\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value);\n    };\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    };\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value);\n    };\n\n    const filteredPersons = () => persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\n\n    const deleteNumber = id => {\n\n        const person = persons.find(p => p.id === id);\n\n        const del = window.confirm(\"Poistetaanko \" + person.name + \"?\");\n\n        if (del) {\n\n            const name = person.name;\n\n            numbersService\n                .deleteNumber(id)\n                .then(data => {\n                    const newPersons = persons.filter(p => p.id !== id);\n                    setPersons(newPersons);\n                    createMessage(\"green\", \"Poistettiin \" + name + \" kannasta\");\n                })\n                .catch(error => {\n                    createMessage(\"red\", `Henkilöä ei enää löydy kannasta`);\n                    console.log(error);\n                    numbersService\n                        .getAll()\n                        .then(data => {\n                            setPersons(data)\n                        });\n                });\n\n        }\n\n    };\n\n    const clearMessage = () => setTimeout(() => setMessage(null), 3500);\n\n    const createMessage = (c, m) => {\n        setColor(c);\n        setMessage(m);\n        clearMessage();\n    };\n\n    const addPerson = (event) => {\n        event.preventDefault();\n        if (persons.find(person => person.name === newName)) {\n            //alert(newName + \" on jo luettelossa.\");\n            const replace = window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero?`);\n            if (replace) {\n                const oldPerson = persons.find(person => person.name === newName);\n                const updatedPerson = {...oldPerson, number: newNumber};\n                numbersService\n                    .update(oldPerson.id, updatedPerson)\n                    .then(data => {\n                        setPersons(persons.map(per => per.id !== oldPerson.id ? per : data));\n                        createMessage(\"green\", \"Muutettiin henkilön \" + oldPerson.name + \" numero\");\n                    })\n                    .catch(error => {\n                        createMessage(\"red\", `Henkilöä ei enää löydy kannasta`);\n                        console.log(error);\n                        numbersService\n                            .getAll()\n                            .then(data => {\n                                setPersons(data)\n                            });\n                    });\n\n            }\n\n        } else {\n            const person = {\n                name: newName,\n                number: newNumber\n            };\n            numbersService.create(person).then(data => {\n                setPersons(persons.concat(data));\n                //setNewName('');\n                createMessage(\"green\", \"Lisättiin \" + person.name + \" onnistuneesti kantaan\");\n            });\n        }\n    };\n\n    const numbers = () => filteredPersons().map(person => <Person name={person.name} number={person.number}\n                                                                  key={person.name}\n                                                                  deleteNumber={() => deleteNumber(person.id)}/>);\n\n\n    return (\n        <div>\n            <h2>Puhelinluettelo</h2>\n            <Notification message={message} color={color}/>\n            <h4>Lisää uusi</h4>\n\n            <PersonForm addPerson={addPerson} handleNumberChange={handleNumberChange}\n                        handlePersonChange={handlePersonChange}/>\n            <br></br>\n            <Filter handleFilterChange={handleFilterChange}/>\n\n            <h2>Numerot</h2>\n            {numbers()}\n        </div>\n    )\n\n};\n\nconst Notification = ({message, color}) => {\n\n    const style = {\n        color: color,\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    };\n\n    if (message === null) {\n        return null\n    } else {\n        return (\n            <div style={style} className=\"notification\">{message}</div>\n        )\n    }\n};\n\nconst PersonForm = ({addPerson, handlePersonChange, handleNumberChange}) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                nimi: <input onChange={handlePersonChange}/>\n            </div>\n            <div>\n                numero: <input onChange={handleNumberChange}/>\n            </div>\n            <div>\n                <button type=\"submit\">lisää</button>\n            </div>\n        </form>\n    );\n};\n\nconst Person = ({name, number, deleteNumber}) => {\n    return <>\n        <p>{name} {number}\n            <button onClick={deleteNumber}>poista</button>\n        </p>\n    </>;\n};\n\nconst Filter = ({handleFilterChange}) => {\n    return (\n        <div>\n            rajaa luetteloa: <input onChange={handleFilterChange}/>\n        </div>\n    );\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}